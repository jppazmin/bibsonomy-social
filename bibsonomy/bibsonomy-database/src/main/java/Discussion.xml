<?xml version="1.0" encoding="UTF-8"?>
<!--


     BibSonomy-Database - Database for BibSonomy.

     Copyright (C) 2006 - 2011 Knowledge & Data Engineering Group,
                               University of Kassel, Germany
                               http://www.kde.cs.uni-kassel.de/

     This program is free software; you can redistribute it and/or
     modify it under the terms of the GNU Lesser General Public License
     as published by the Free Software Foundation; either version 2
     of the License, or (at your option) any later version.

     This program is distributed in the hope that it will be useful,
     but WITHOUT ANY WARRANTY; without even the implied warranty of
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
     GNU Lesser General Public License for more details.

     You should have received a copy of the GNU Lesser General Public License
     along with this program; if not, write to the Free Software
     Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

-->

<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://www.ibatis.com/dtd/sql-map-2.dtd">

<sqlMap namespace="Discussion">
	
	<select id="getDiscussionSpaceForResource" parameterClass="discussionItemParam" resultMap="DiscussionCommon.discussionItem">
		SELECT <include refid ="allDiscussionColumns"/> FROM ((
			<!-- own, viewable for public and groups -->
			SELECT <include refid ="allDiscussionAttributesGroupExtra"/> FROM
				discussion d
				LEFT JOIN groupids g ON d.group = g.group <!-- get group name -->
			WHERE d.interHash = #interHash#
				AND (d.user_name = #userName# OR <include refid="inGroupsUncheckedDiscussion"/>) <!-- own or for one group the user is member of -->
			) UNION (
			<!-- viewable for friends -->
			SELECT <include refid ="allDiscussionAttributesGroupExtra"/> FROM
				discussion d
				LEFT JOIN groupids g ON d.group = g.group <!-- get group name -->,
				friends f
			<!-- TODO: adapt on new tagged based friendship -->
		    WHERE f.f_user_name = #userName#  
		    	AND d.user_name = f.user_name	  <!-- friend of the user -->
				AND d.interHash = #interHash#
				AND d.group = #groupTypeFriends# <!-- only group friends discussion items -->
			)) AS d
		ORDER BY d.date ASC
	</select>
	
	<select id="getDiscussionItemForResourceByHash" parameterClass="discussionItemParam" resultMap="DiscussionCommon.discussionItem">
		SELECT <include refid ="commonDiscussionAttributes"/>, NULL AS `group`, NULL AS group_name FROM
			discussion d
		WHERE d.hash = #hash#
			AND d.interHash = #interHash#
	</select>
	
	<select id="hasSubDiscussionItems" parameterClass="discussionItemParam" resultClass="boolean">
		SELECT count(*) FROM discussion d WHERE d.parent_hash = #hash# AND d.interHash = #interHash#
	</select>
	
	<update id="cleanDiscussionItem" parameterClass="discussionItemParam">
		UPDATE discussion
			SET user_name = '', text = NULL, rating = NULL, anonymous = 0, type = 0
		WHERE user_name = #userName#
			AND interHash = #interHash#
			AND hash = #hash#
	</update>
	
	<delete id="deleteDiscussionItem" parameterClass="discussionItemParam">
		DELETE FROM
			discussion
		WHERE hash = #hash#
			AND interHash = #interHash#
			AND user_name = #userName#
	</delete>
</sqlMap>